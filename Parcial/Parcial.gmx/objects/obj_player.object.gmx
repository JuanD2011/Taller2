<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_sr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicialización de Variables

grav = 0.22;
hsp = 0;
vsp = 0;
movespeed = 4;
jumpspeed = 7;
shoot = 1;
door = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimiento del Personaje

//Obtener las entradas de teclado

key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check_pressed(vk_up);
leftmove = false;
rightmove = false;
if(key_left)
{
    leftmove = true;
}
if(keyboard_check_released(vk_left))
{
    leftmove = false;
}
if(key_right)
{
    rightmove = true;
}
if(keyboard_check_released(vk_right))
{
    rightmove = false;
}
//Operaciones con las entradas de teclado

move = key_right - key_left;
hsp = move * movespeed;

//Sprites

if (move)
{
    sprite_index = spr_player_wr;
}
if((sprite_index == spr_player_wr) || (sprite_index == spr_player_jr) || (sprite_index == spr_player_fr)) &amp;&amp; (rightmove == false)
{
    sprite_index = spr_player_sr;
}
if (-move)
{
    sprite_index = spr_player_wl;
}
if((sprite_index == spr_player_wl) || (sprite_index == spr_player_jl) || (sprite_index == spr_player_fl)) &amp;&amp; (leftmove == false)
{
    sprite_index = spr_player_sl;
}
if(move) &amp;&amp; (-vsp)
{
    sprite_index = spr_player_jr;
}
if(-move) &amp;&amp; (-vsp)
{
    sprite_index = spr_player_jl;
}
if(move) &amp;&amp; (vsp)
{
    sprite_index = spr_player_fr;
}
if(-move) &amp;&amp; (vsp)
{
    sprite_index = spr_player_fl;
}
//Colisión horizontal

if(place_meeting(x + hsp, y, obj_wall)) || (place_meeting(x + hsp, y, obj_door))
{
    while(!place_meeting(x + sign(hsp), y, obj_wall)) &amp;&amp; (!place_meeting(x + sign(hsp), y, obj_door))
    {
        x += sign(hsp);
    }
    hsp = 0    
}
x += hsp;

//Salto

if (vsp &lt; 10)
{
    vsp += grav;
} 
if(place_meeting(x, y + 1, obj_wall))
{
    vsp = key_up * -jumpspeed;
}

//Colisión vertical

if(place_meeting(x, y + vsp, obj_wall)) || (place_meeting(x, y + vsp, obj_door))
{
    while(!place_meeting(x, y + sign(vsp), obj_wall)) &amp;&amp; (!place_meeting(x, y + sign(vsp), obj_door))
    {
        y += sign(vsp);
    }
    vsp = 0    
}
y += vsp;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disparar

if(keyboard_check(vk_space) &amp;&amp; (shoot) &amp;&amp; ((sprite_index = spr_player_sr) || (sprite_index == spr_player_fr) || (sprite_index == spr_player_jr) || (sprite_index == spr_player_wr)))
{
    instance_create(x, y, obj_bullet_r);
    shoot = 0;
    alarm[0] = 15;
}
if(keyboard_check(vk_space) &amp;&amp; (shoot) &amp;&amp; ((sprite_index = spr_player_sl) || (sprite_index == spr_player_fl) || (sprite_index == spr_player_jl) || (sprite_index == spr_player_wl)))
{
    instance_create(x, y, obj_bullet_l);
    shoot = 0;
    alarm[0] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Puerta
var p1 = instance_number(obj_p1);
var p2 = instance_number(obj_p2);
var p3 = instance_number(obj_p3);
var p4 = instance_number(obj_p4);
var p5 = instance_number(obj_p5);

if(p1 == 0 &amp;&amp; p2 == 0 &amp;&amp; p3 == 0 &amp;&amp; p4 == 0 &amp;&amp; p5 == 0)
{
    show_debug_message("y");
    door = true;
}
if(place_meeting(x + 1, y + 1, obj_door)) &amp;&amp; (door)
{
    show_debug_message("d");
    with(obj_door)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_goal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
